// <auto-generated />
using JsonEg;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace JsonEg.Migrations
{
    [DbContext(typeof(EFDbContext))]
    [Migration("20230614061633_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("JsonEg.Model.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("FullName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Employee");
                });

            modelBuilder.Entity("JsonEg.Model.Employee", b =>
                {
                    b.OwnsOne("JsonEg.Model.ContactDetails", "ContactDetails", b1 =>
                        {
                            b1.Property<int>("EmployeeId")
                                .HasColumnType("integer");

                            b1.HasKey("EmployeeId");

                            b1.ToTable("Employee");

                            b1.WithOwner()
                                .HasForeignKey("EmployeeId");

                            b1.OwnsMany("JsonEg.Model.Address", "Addresses", b2 =>
                                {
                                    b2.Property<int>("ContactDetailsEmployeeId")
                                        .HasColumnType("integer");

                                    b2.Property<int>("Id")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("integer");

                                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b2.Property<int>("Id"));

                                    b2.Property<string>("AddressType")
                                        .HasColumnType("text");

                                    b2.Property<string>("City")
                                        .HasColumnType("text");

                                    b2.Property<string>("Country")
                                        .HasColumnType("text");

                                    b2.Property<string>("State")
                                        .HasColumnType("text");

                                    b2.HasKey("ContactDetailsEmployeeId", "Id");

                                    b2.ToTable("Address");

                                    b2.WithOwner()
                                        .HasForeignKey("ContactDetailsEmployeeId");
                                });

                            b1.OwnsOne("JsonEg.Model.Contacts", "Contacts", b2 =>
                                {
                                    b2.Property<int>("ContactDetailsEmployeeId")
                                        .HasColumnType("integer");

                                    b2.Property<string>("Email")
                                        .HasColumnType("text");

                                    b2.Property<string>("Phone")
                                        .HasColumnType("text");

                                    b2.HasKey("ContactDetailsEmployeeId");

                                    b2.ToTable("Employee");

                                    b2.WithOwner()
                                        .HasForeignKey("ContactDetailsEmployeeId");
                                });

                            b1.Navigation("Addresses");

                            b1.Navigation("Contacts");
                        });

                    b.Navigation("ContactDetails")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
